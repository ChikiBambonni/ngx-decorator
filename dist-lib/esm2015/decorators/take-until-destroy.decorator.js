import { Subject } from 'rxjs';
/**
   * @param constructor Class constructor
*/
export function TakeUntilDestroy(constructor) {
    const originalDestroy = constructor.prototype.ngOnDestroy;
    if (typeof originalDestroy !== 'function') {
        console.warn(`Class ${constructor.name} should implement OnDestroy method`);
    }
    constructor.prototype.componentDestroy = function () {
        this._takeUntilDestroy$ = this._takeUntilDestroy$ || new Subject();
        return this._takeUntilDestroy$.asObservable();
    };
    constructor.prototype.ngOnDestroy = function (...args) {
        if (typeof originalDestroy === 'function') {
            originalDestroy.apply(this, args);
        }
        if (this._takeUntilDestroy$) {
            this._takeUntilDestroy$.next();
            this._takeUntilDestroy$.complete();
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFrZS11bnRpbC1kZXN0cm95LmRlY29yYXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1kZWNvcmF0b3IvIiwic291cmNlcyI6WyJkZWNvcmF0b3JzL3Rha2UtdW50aWwtZGVzdHJveS5kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQjs7RUFFRTtBQUNGLE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxXQUFxQjtJQUNsRCxNQUFNLGVBQWUsR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQztJQUUxRCxJQUFLLE9BQU8sZUFBZSxLQUFLLFVBQVUsRUFBRTtRQUN4QyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsV0FBVyxDQUFDLElBQUksb0NBQW9DLENBQUMsQ0FBQztLQUMvRTtJQUVELFdBQVcsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLEdBQUc7UUFDckMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsSUFBSSxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQ25FLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ2xELENBQUMsQ0FBQztJQUVGLFdBQVcsQ0FBQyxTQUFTLENBQUMsV0FBVyxHQUFHLFVBQVMsR0FBRyxJQUFJO1FBQ2hELElBQUksT0FBTyxlQUFlLEtBQUssVUFBVSxFQUFFO1lBQ3ZDLGVBQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3JDO1FBRUQsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7WUFDekIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUN0QztJQUNMLENBQUMsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICAgKiBAcGFyYW0gY29uc3RydWN0b3IgQ2xhc3MgY29uc3RydWN0b3JcbiovXG5leHBvcnQgZnVuY3Rpb24gVGFrZVVudGlsRGVzdHJveShjb25zdHJ1Y3RvcjogRnVuY3Rpb24pIHtcbiAgICBjb25zdCBvcmlnaW5hbERlc3Ryb3kgPSBjb25zdHJ1Y3Rvci5wcm90b3R5cGUubmdPbkRlc3Ryb3k7XG5cbiAgICBpZiAoIHR5cGVvZiBvcmlnaW5hbERlc3Ryb3kgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBDbGFzcyAke2NvbnN0cnVjdG9yLm5hbWV9IHNob3VsZCBpbXBsZW1lbnQgT25EZXN0cm95IG1ldGhvZGApO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yLnByb3RvdHlwZS5jb21wb25lbnREZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuX3Rha2VVbnRpbERlc3Ryb3kkID0gdGhpcy5fdGFrZVVudGlsRGVzdHJveSQgfHwgbmV3IFN1YmplY3QoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Rha2VVbnRpbERlc3Ryb3kkLmFzT2JzZXJ2YWJsZSgpO1xuICAgIH07XG5cbiAgICBjb25zdHJ1Y3Rvci5wcm90b3R5cGUubmdPbkRlc3Ryb3kgPSBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb3JpZ2luYWxEZXN0cm95ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBvcmlnaW5hbERlc3Ryb3kuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fdGFrZVVudGlsRGVzdHJveSQpIHtcbiAgICAgICAgICAgIHRoaXMuX3Rha2VVbnRpbERlc3Ryb3kkLm5leHQoKTtcbiAgICAgICAgICAgIHRoaXMuX3Rha2VVbnRpbERlc3Ryb3kkLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuIl19